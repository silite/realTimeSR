(()=>{"use strict";const t=`\nclass MyProcessor extends AudioWorkletProcessor {\n  constructor(options) {\n    super(options);\n    this.audioData = [];\n    this.nextUpdateFrame = 40;\n  }\n  get intervalInFrames() {\n    return 200 / 1000 * sampleRate;\n  }\n  process(inputs) {\n    // 去处理音频数据\n    // eslint-disable-next-line no-undef\n    if (inputs[0][0]) {\n      const output = ${o}(inputs[0][0], sampleRate);\n      const audioData = ${n}(output);\n      const data = [...new Int8Array(audioData.buffer)];\n      this.audioData = this.audioData.concat(data);\n      this.nextUpdateFrame -= inputs[0][0].length;\n      if (this.nextUpdateFrame < 0) {\n        this.nextUpdateFrame += this.intervalInFrames;\n        this.port.postMessage({\n          audioData: new Int8Array(this.audioData)\n        });\n        this.audioData = [];\n      }\n        return true;\n      }\n  }\n}\nregisterProcessor('my-processor', MyProcessor);\n`,e=window.URL.createObjectURL(new Blob([t],{type:"text/javascript"}));function n(t){const e=2*t.length,n=new ArrayBuffer(e),o=new DataView(n);let a=0;for(let e=0;e<t.length;e++,a+=2){const n=Math.max(-1,Math.min(1,t[e]));o.setInt16(a,n<0?32768*n:32767*n,!0)}return o}function o(t,e=44100){const n=new Float32Array(t),o=Math.round(n.length*(16e3/e)),a=new Float32Array(o),i=(n.length-1)/(o-1);a[0]=n[0];for(let t=1;t<o-1;t++){const e=t*i,o=Math.floor(e).toFixed(),s=Math.ceil(e).toFixed(),r=e-o;a[t]=n[o]+(n[s]-n[o])*r}return a[o-1]=n[n.length-1],a}class a{constructor(){this.audioData=[],this.stream=null,this.audioContext=null,a.instance||(a.instance=this)}start(){if(this.audioContext)return void this.OnError("录音已开启");navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;try{if(this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.audioContext.resume(),!this.audioContext)return void this.OnError("浏览器不支持webAudioApi相关接口")}catch(t){if(!this.audioContext)return void this.OnError("浏览器不支持webAudioApi相关接口")}if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then((e=>{t(e)})).catch((t=>{a(t)}));else{if(!navigator.getUserMedia)return navigator.userAgent.toLowerCase().match(/chrome/)&&location.origin.indexOf("https://")<0?this.OnError("chrome下获取浏览器录音功能，因为安全性问题，需要在localhost或127.0.0.1或https下才能获取权限"):this.OnError("无法获取浏览器录音功能，请升级浏览器或使用chrome"),void(this.audioContext&&this.audioContext.close());navigator.getUserMedia({audio:!0,video:!1},(e=>{t(e)}),(function(t){a(t)}))}const t=t=>{this.stream=t;const a=this.audioContext.createMediaStreamSource(this.stream);if(this.audioContext.audioWorklet)this.audioContext.audioWorklet.addModule(e).then((()=>{const t=new AudioWorkletNode(this.audioContext,"my-processor",{numberOfInputs:1,numberOfOutputs:1,channelCount:1});t.port.onmessage=t=>{this.OnReceivedData(t.data.audioData)},a.connect(t).connect(this.audioContext.destination)})).catch(console.error);else{const t=this.audioContext.createScriptProcessor(0,1,1);t.onaudioprocess=t=>{const e=n(o(t.inputBuffer.getChannelData(0),this.audioContext.sampleRate));if(this.audioData.push(...new Int8Array(e.buffer)),this.audioData.length>6400){const t=new Int8Array(this.audioData);this.OnReceivedData(t)}},a.connect(t),t.connect(this.audioContext.destination)}},a=t=>{this.OnError(t),this.stop()}}stop(){/Safari/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)||this.audioContext&&this.audioContext.suspend(),this.audioContext&&this.audioContext.suspend(),this.stream&&(this.stream.getTracks().map((t=>{t.stop()})),this.stream=null)}OnReceivedData(t){}OnError(t){}}window.WebRecorder=a})();